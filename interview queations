emp_id,emp_name,dept,salary,DOJ
1,Kailas,IT,1200,1/1/2024
2,Manmohan,IT,1100,2/2/2024
2,Manmohan,IT,1200,3/2/2024
3,788,
 
select count(*),* from emp 
group by id 
having count(id) >1
 
 
with cte as (
 
select count(id),row_number() (partition by id order by id) as rank_no from emp group by id
)
delete id from cte where rank_no > 1
 
1 1
1 2
1 3
2 4

has context menu

with cte as (
select salary, densk_rank() over (order by salary ) as rank from emp )
)
select salary from cte where rank =5
 
salect salary from emp 
order by salary desc 
limit 1 offset 5
 
 
bigquery_connection=bigquery.client()
stoarge_connetion=storage.client()
table_name='Projet_name.dataset_name.table_name'
gs_bucket=gs://
 
load_data=
 
a.csv
 
write_truncate=True




table1:
name id
A     1
A_a  1
b    2
table 2 :
id , sales
1  200
1 300
2  500
 
 
1  1   1 1
1  1   1  1
2  2    2
 
name id sales
A    1  200
A_a  1  300
b    2  500
 
list = [ 12 ,23,43,1290, 343]
result=sum(list)
sum=0
for i list:
    sum +=i
print(sum)


0  0 
1  0 
0  3  
2  3  
3  3  
3  4
5  5  
0   
0
3   
3   
3   
4   
5
 
 
3
3
3
3
3
3
5
4
 
 
E-R Model
Conceptual, Logical and Physical Data Model
Data / Database Normalization
Dimensional Modeling (Star Schema, Snowflake Schema)
SCD (Slowly Changing Dimensions)
Row-based databases vs Column-based based databases
ETL vs ELT
Typical ETL architecture
 
 
E-R Model
Conceptual, Logical and Physical Data Model
Data / Database Normalization
Dimensional Modeling (Star Schema, Snowflake Schema)
SCD (Slowly Changing Dimensions)
Row-based databases vs Column-based based databases
ETL vs ELT
Typical ETL architecture
Aashish Diwakar
7:17â€¯PM
ELT Architecture -->
1) Raw or Bronze Layer, 2) Processed or Silver Layer, 3) Business or Gold Layer, 4) BI Layer (Power BI, Qlik, Tableau)
 
 
how to fuploacte

[2/22 10:58 AM] Yadav, Kailas M.
0  0 

1  0 

0  3  

2  3  

3  3  

3  4

5  5  

0   

0

3   

3   

3   

4   

5
 
 
3

3

3

3

3

3

5

4

sample_function_dag
gsutil cp sample_function_dag.py gs://us-east1-test-composere-80b3c98d-bucket/dags/
gsutil cp test_03.py gs://us-east1-test-composere-80b3c98d-bucket/dags/
/home/cloud_user_p_4108d89d/.docker/sample_function_dag.py
/home/cloud_user_p_4108d89d/.docker/test_03.py

gsutil cp Test_SRE.py gs://us-east1-test-composere-80b3c98d-bucket/dags/
/home/cloud_user_p_4108d89d/test_04.py
/home/cloud_user_p_4108d89d/Test_SRE.py

/home/cloud_user_p_4108d89d/test_02.py
gsutil cp trans_dt, trans_amt, customer_id, city
 
create table `project_id.dataset_id.table_name` 
(trans_dt datetime,
trans_amt Float,
customer_id int64,
city String )
_Tran(2023-01-9)
customer_id(0,100,10)
Extract(Day)
Extract(Month)
 
 
table 1:
1
0
null
null
Table 2:
1     1     1
0     0     0
null  null  
      null
inner join:2
left join:3
full join:5

Test_SRE.py gs://us-east1-test-composere-80b3c98d-bucket/dags/

[2/17 12:46 PM] Yadav, Kailas M.
With cte as 

(

select id, salary

densk_rank() over (partition by id order by salary ) rn from emp

)

select salary from cte where rn=4
 
 
select max(salary) from emp where salary < (select salary from emp where
 
 
select max(Salary) from emp 

order by salary desc 

limit 1 offset 3
 
 
table 1  table 2

a          b

1          1      1

0          1      1

0          null

null

null
 
Inner join

1

1
 
 
left join 

1

1

0

0

null

null
 
 
right

1

1

Null
 
 
full join 

1

1

0

0 

null

null

null
 
 
[2/17 12:47 PM] Yadav, Kailas M.
3 tables

table_1 

1 

2
 
table_2

2

3
 
table_3

3

4

5
 
 
select * from table_1

intersect(except)

select * from table_2

instersect(except)

select * from table_3
 
 
select * from table_1 where id not in (select id from table_2)
 
 
 
 
Kailas 

substring(
 

 With cte as 
(
select id, salary
densk_rank() over (partition by id order by salary ) rn from emp
)
select salary from cte where rn=4
 
 
select max(salary) from emp where salary < (select salary from emp where
 
 
select max(Salary) from emp 
order by salary desc 
limit 1 offset 3
 
 
table 1  table 2
a          b
1          1      1
0          1      1
0          null
null
null
 
Inner join
1
1
 
 
left join 
1
1
0
0
null
null
 
 
right
1
1
Null
 
 
full join 
1
1
0
0 
null
null
null

3 tables
table_1 
1 
2
 
table_2
2
3
 
table_3
3
4
5
 
 
select * from table_1
intersect(except)
select * from table_2
instersect(except)
select * from table_3
 
 
select * from table_1 where id not in (select id from table_2)
 
 
 
 
Kailas 
substring(


 Cloud function
 Cloud funtion gen1
Triggering method
4 methods
Cloud Storage
Cloud PUB/SUB
Firestore
HTTP
 
 
Storage
1.archiving
2.deleting
3.finilize/creating
4.metadata update
 
 
create  a new
 
Cloud Pub/SUB
real time data 
Transfer meg publisher
 
 
Firestore
create
delete
update
write(create,delete,and update)
 
 
 
from google.cloud import bigquery
 
 
def hello_program(request):
 
 
def pubsub(event,context):
		print('Cloud Function gen1')
		client=bigquery.Client()
		storage=storage.client()
		a=1
		if a==0:
			print('Hello India')
		else:
			print('Hello')
		data_insert="""
		select * from table name
		"""
		job=client.query(data_insert)

main.py
requiremnt.txt
google-cloud-bigquery
 
 
 
 
langauge: python,node.js,java,Go,php,rubby,.net
 
requiremnt.txt


 Interview empid, name,managerid
=====================
1,emp1,NULL
2,emp2,1
3,emp3,2
4,emp4,2
5,emp5,3
6,emp6,NULL
Need employee and his manager?
emp_name and manager_name
 
select name as emp_name,managerid as manager_name  from emp where empid=
 
 
SELECT e1.name AS emp_name, e2.name AS manager_name
FROM your_table e1
LEFT JOIN your_table e2 ON e1.managerid = e2.empid
 
 
SELECT e1.name AS emp_name, e2.name AS manager_name
FROM your_table e1
LEFT JOIN your_table e2 ON e1.managerid = e2.empid;
 
 
Emp_name Manager_name
=====================
emp1,NULL
emp2,emp1
emp3,emp2
emp4,emp2
emp5,emp3
emp6,NULL
 
 
 
cust,cust_gender
================
cust1,male
cust2,female
cust3,male
cust4,female
update query to swap gender?
 
UPDATE your_table
SET cust_gender = CASE
    WHEN cust_gender = 'male' THEN 'female'
    WHEN cust_gender = 'female' THEN 'male'
    ELSE cust_gender
END;
 
 
 
update gender 
set=female 
where cust1
 
 
 
 
a=1,2,3,4,1,2,3,5,4,5
input_list = [1, 2, 3, 4, 1, 2, 3, 5, 4, 5]
 
unique_values = list(set(input_list))
 
print(unique_values)
 
# a={1,2,3,4,1,2,3,5,4,5}
# print(a)
a={1, 2, 3, 3, 4, 4, 5, 5, 5, 5}
b=[1, 2, 3, 3, 4, 4, 5, 5, 5, 5]
list=sorted(b)
print(list)
for i in a:
    print(i)
 
def find_duplicates(input_list):
    seen = set()
    duplicates = set(item for item in input_list if item in seen or seen.add(item))
    return list(duplicates)
 
# Example usage
input_list = [1, 2, 3, 3, 4, 4, 5, 5, 5, 5]
result = find_duplicates(input_list)
print(result)
 
 
'2021-03-30T08:06:46Z'
03/30
select extract('%m:%d')
 
select safe_cast('03/30',date)
 
SELECT STR_TO_DATE(SUBSTRING('2021-03-30T08:06:46Z', 6, 5), '%m/%d') AS month_and_date;
 
 
with cte as(
 
select empname,deptno,salary,dense_rank over() (partition by deptno order by salary) as rank from department 
)
select salary from cte 
where rank = 2
 
 
WITH RankedSalaries AS (
  SELECT
    empname,
    deptno,
    salary,
    ROW_NUMBER() OVER (PARTITION BY deptno ORDER BY salary DESC) AS salary_rank
  FROM
    your_table
)
SELECT empname, deptno, salary
FROM RankedSalaries
WHERE salary_rank = 2;


left join interview 

empname, deptno,salary
======================
emp1,10,10000
emp2,20,7000
emp3,10,12000
emp4,30,10000
emp5,20,5000
emp6,30,8000
emp7,10,12000
employee 2nd highest salary in each department?
 
 
with cte as(
 
select empname,deptno,salary,dense_rank over() (partition by deptno order by salary) as rank from department 
)
select salary from cte 
where rank = 2
 
 
WITH RankedSalaries AS (
  SELECT
    empname,
    deptno,
    salary,
    ROW_NUMBER() OVER (PARTITION BY deptno ORDER BY salary DESC) AS salary_rank
  FROM
    your_table
)
SELECT empname, deptno, salary
FROM RankedSalaries
WHERE salary_rank = 2;


[2/9 2:42 PM] Yadav, Kailas M.
empid, name,managerid

=====================

1,emp1,NULL

2,emp2,1

3,emp3,2

4,emp4,2

5,emp5,3

6,emp6,NULL

Need employee and his manager?

emp_name and manager_name
 
select name as emp_name,managerid as manager_name  from emp where empid=
 
 
SELECT e1.name AS emp_name, e2.name AS manager_name

FROM your_table e1

LEFT JOIN your_table e2 ON e1.managerid = e2.empid
 
 
SELECT e1.name AS emp_name, e2.name AS manager_name

FROM your_table e1

LEFT JOIN your_table e2 ON e1.managerid = e2.empid;
 
 
Emp_name Manager_name

=====================

emp1,NULL

emp2,emp1

emp3,emp2

emp4,emp2

emp5,emp3

emp6,NULL
 
 
 
cust,cust_gender

================

cust1,male

cust2,female

cust3,male

cust4,female

update query to swap gender?
 
UPDATE your_table

SET cust_gender = CASE

    WHEN cust_gender = 'male' THEN 'female'

    WHEN cust_gender = 'female' THEN 'male'

    ELSE cust_gender

END;
 
 
 
update gender 

set=female 

where cust1
 
 
 
 
a=1,2,3,4,1,2,3,5,4,5

input_list = [1, 2, 3, 4, 1, 2, 3, 5, 4, 5]
 
unique_values = list(set(input_list))
 
print(unique_values)
 
# a={1,2,3,4,1,2,3,5,4,5}

# print(a)

a={1, 2, 3, 3, 4, 4, 5, 5, 5, 5}

b=[1, 2, 3, 3, 4, 4, 5, 5, 5, 5]

list=sorted(b)

print(list)

for i in a:

    print(i)
 
def find_duplicates(input_list):

    seen = set()

    duplicates = set(item for item in input_list if item in seen or seen.add(item))

    return list(duplicates)
 
# Example usage

input_list = [1, 2, 3, 3, 4, 4, 5, 5, 5, 5]

result = find_duplicates(input_list)

print(result)
 
 
'2021-03-30T08:06:46Z'

03/30

select extract('%m:%d')
 
select safe_cast('03/30',date)
 
SELECT STR_TO_DATE(SUBSTRING('2021-03-30T08:06:46Z', 6, 5), '%m/%d') AS month_and_date;
 
 
with cte as(
 
select empname,deptno,salary,dense_rank over() (partition by deptno order by salary) as rank from department 

)

select salary from cte 

where rank = 2
 
 
WITH RankedSalaries AS (

  SELECT

    empname,

    deptno,

    salary,

    ROW_NUMBER() OVER (PARTITION BY deptno ORDER BY salary DESC) AS salary_rank

  FROM

    your_table

)

SELECT empname, deptno, salary

FROM RankedSalaries

WHERE salary_rank = 2;
[2/9 2:43 PM] Yadav, Kailas M.
Cloud funtion gen1

Triggering method

4 methods

Cloud Storage

Cloud PUB/SUB

Firestore

HTTP
 
 
Storage

1.archiving

2.deleting

3.finilize/creating

4.metadata update
 
 
create  a new
 
Cloud Pub/SUB

real time data 

Transfer meg publisher
 
 
Firestore

create

delete

update

write(create,delete,and update)
 
 
 
from google.cloud import bigquery
 
 
def hello_program(request):
 
 
def pubsub(event,context):

		print('Cloud Function gen1')

		client=bigquery.Client()

		storage=storage.client()

		a=1

		if a==0:

			print('Hello India')

		else:

			print('Hello')

		data_insert="""

		select * from table name

		"""

		job=client.query(data_insert)


main.py

requiremnt.txt

google-cloud-bigquery
 
 
 
 
langauge: python,node.js,java,Go,php,rubby,.net
 
requiremnt.txt


 empid, name,managerid
=====================
1,emp1,NULL
2,emp2,1
3,emp3,2
4,emp4,2
5,emp5,3
6,emp6,NULL
Need employee and his manager?
emp_name and manager_name
 
select name as emp_name,managerid as manager_name  from emp where empid=
 
 
SELECT e1.name AS emp_name, e2.name AS manager_name
FROM your_table e1
LEFT JOIN your_table e2 ON e1.managerid = e2.empid
 
 
SELECT e1.name AS emp_name, e2.name AS manager_name
FROM your_table e1
LEFT JOIN your_table e2 ON e1.managerid = e2.empid;
 
 
Emp_name Manager_name
=====================
emp1,NULL
emp2,emp1
emp3,emp2
emp4,emp2
emp5,emp3
emp6,NULL
 
 
 
cust,cust_gender
================
cust1,male
cust2,female
cust3,male
cust4,female
update query to swap gender?
 
UPDATE your_table
SET cust_gender = CASE
    WHEN cust_gender = 'male' THEN 'female'
    WHEN cust_gender = 'female' THEN 'male'
    ELSE cust_gender
END;
 
 
 
update gender 
set=female 
where cust1
 
 
 
 
a=1,2,3,4,1,2,3,5,4,5
input_list = [1, 2, 3, 4, 1, 2, 3, 5, 4, 5]
 
unique_values = list(set(input_list))
 
print(unique_values)
 
# a={1,2,3,4,1,2,3,5,4,5}
# print(a)
a={1, 2, 3, 3, 4, 4, 5, 5, 5, 5}
b=[1, 2, 3, 3, 4, 4, 5, 5, 5, 5]
list=sorted(b)
print(list)
for i in a:
    print(i)
 
def find_duplicates(input_list):
    seen = set()
    duplicates = set(item for item in input_list if item in seen or seen.add(item))
    return list(duplicates)
 
# Example usage
input_list = [1, 2, 3, 3, 4, 4, 5, 5, 5, 5]
result = find_duplicates(input_list)
print(result)
 
 
'2021-03-30T08:06:46Z'
03/30
select extract('%m:%d')
 
select safe_cast('03/30',date)
 
SELECT STR_TO_DATE(SUBSTRING('2021-03-30T08:06:46Z', 6, 5), '%m/%d') AS month_and_date;
 
 
with cte as(
 
select empname,deptno,salary,dense_rank over() (partition by deptno order by salary) as rank from department 
)
select salary from cte 
where rank = 2
 
 
WITH RankedSalaries AS (
  SELECT
    empname,
    deptno,
    salary,
    ROW_NUMBER() OVER (PARTITION BY deptno ORDER BY salary DESC) AS salary_rank
  FROM
    your_table
)
SELECT empname, deptno, salary
FROM RankedSalaries
WHERE salary_rank = 2;


interview company

cust,cust_gender
================
cust1,male
cust2,female
cust3,male
cust4,female
update query to swap gender?
 
UPDATE your_table
SET cust_gender = CASE
    WHEN cust_gender = 'male' THEN 'female'
    WHEN cust_gender = 'female' THEN 'male'
    ELSE cust_gender
END;
 
 
 
update gender 
set=female 
where cust1
 
 
 
 
a=1,2,3,4,1,2,3,5,4,5
input_list = [1, 2, 3, 4, 1, 2, 3, 5, 4, 5]
 
unique_values = list(set(input_list))
 
print(unique_values)
 
# a={1,2,3,4,1,2,3,5,4,5}
# print(a)
a={1, 2, 3, 3, 4, 4, 5, 5, 5, 5}
b=[1, 2, 3, 3, 4, 4, 5, 5, 5, 5]
list=sorted(b)
print(list)
for i in a:
    print(i)
 
def find_duplicates(input_list):
    seen = set()
    duplicates = set(item for item in input_list if item in seen or seen.add(item))
    return list(duplicates)
 
# Example usage
input_list = [1, 2, 3, 3, 4, 4, 5, 5, 5, 5]
result = find_duplicates(input_list)
print(result)
 
 
'2021-03-30T08:06:46Z'
03/30
select extract('%m:%d')
 
select safe_cast('03/30',date)
 
SELECT STR_TO_DATE(SUBSTRING('2021-03-30T08:06:46Z', 6, 5), '%m/%d') AS month_and_date;

interview 
empname, deptno,salary
======================
emp1,10,10000
emp2,20,7000
emp3,10,12000
emp4,30,10000
emp5,20,5000
emp6,30,8000
emp7,10,12000
employee 2nd highest salary in each department?
 
 
with cte as(
 
select empname,deptno,salary,dense_rank over() (partition by deptno order by salary) as rank from department 
)
select salary from cte 
where rank = 2
 
 
WITH RankedSalaries AS (
  SELECT
    empname,
    deptno,
    salary,
    ROW_NUMBER() OVER (PARTITION BY deptno ORDER BY salary DESC) AS salary_rank
  FROM
    your_table
)
SELECT empname, deptno, salary
FROM RankedSalaries
WHERE salary_rank = 2;

